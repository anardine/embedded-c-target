11:35:40 **** Incremental Build of configuration Debug for project 001NucleoProject ****
make -j11 all 
arm-none-eabi-gcc "../Src/main.c" -mcpu=cortex-m4 -std=gnu11 -g3 -DDEBUG -DNUCLEO_F411RE -DSTM32 -DSTM32F4 -DSTM32F411RETx -c -I../Inc -O0 -ffunction-sections -fdata-sections -Wall -fstack-usage -fcyclomatic-complexity -MMD -MP -MF"Src/main.d" -MT"Src/main.o" --specs=nano.specs -mfpu=fpv4-sp-d16 -mfloat-abi=hard -mthumb -o "Src/main.o"
../Src/main.c:22:4: warning: #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use." [-Wcpp]
   22 |   #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
      |    ^~~~~~~
arm-none-eabi-gcc -o "001NucleoProject.elf" @"objects.list"   -mcpu=cortex-m4 -T"/Users/alessandro.nardinelli/Documents/Embedded-C/my_workspace/target/001NucleoProject/STM32F411RETX_FLASH.ld" --specs=nosys.specs -Wl,-Map="001NucleoProject.map" -Wl,--gc-sections -static --specs=nano.specs -mfpu=fpv4-sp-d16 -mfloat-abi=hard -mthumb -Wl,--start-group -lc -lm -Wl,--end-group
Finished building target: 001NucleoProject.elf
 
arm-none-eabi-size  001NucleoProject.elf 
arm-none-eabi-objdump -h -S 001NucleoProject.elf  > "001NucleoProject.list"
   text	   data	    bss	    dec	    hex	filename
   4956	     92	   1900	   6948	   1b24	001NucleoProject.elf
Finished building: default.size.stdout
 
Finished building: 001NucleoProject.list
 
11:35:46 **** Incremental Build of configuration Debug for project 001NucleoProject ****
make -j11 all 
arm-none-eabi-size  001NucleoProject.elf 
   text	   data	    bss	    dec	    hex	filename
   4956	     92	   1900	   6948	   1b24	001NucleoProject.elf
Finished building: default.size.stdout
 
11:38:07 **** Incremental Build of configuration Debug for project 001NucleoProject ****
make -j11 all 
arm-none-eabi-size  001NucleoProject.elf 
   text	   data	    bss	    dec	    hex	filename
   4956	     92	   1900	   6948	   1b24	001NucleoProject.elf
Finished building: default.size.stdout
 

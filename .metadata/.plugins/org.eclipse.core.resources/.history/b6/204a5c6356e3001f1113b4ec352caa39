/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * Copyright (c) 2025 STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file
 * in the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *
 ******************************************************************************
 */

#include <stdint.h>

#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

int main(void)
{

	int32_t *pGPIOA_CLK_EN = (int32_t *) 0x40023830; // address for RCC_ AHB1ENR
	int32_t *pGPIOA_MODE_OUT = (int32_t *) 0x40020000; // Address for GPIOx_MODER
	int32_t *pGPIOA_DATA_OUT = (int32_t *) 0x40020014; // Address for GPIOx_ODR


	 *pGPIOA_CLK_EN & 1 ? 1 : *pGPIOA_CLK_EN |= (1 << 0); // check if RCC_AHB1ENR on GPIOA is enable, if not, enable it

	 ((*pGPIOA_MODE_OUT >> 10) & 3) ? *pGPIOA_MODE_OUT &= ~(3 << 10) : *pGPIOA_MODE_OUT |= (1 << 10); // check if GPIOx_MODER on PA5 is enable, if not, enable it. If it is set to anything, we clear  to set

		//(*pGPIOA_MODE_OUT >> 10) & 3
		//000000101010010110001001|01| (*pGPIOA_MODE_OUT >> 10)
		//000000000000000000000000|11| 3
		//000000000000000000000000|01| (*pGPIOA_MODE_OUT >> 10) & 3

		//00000010101001|01|1000100101
		//11111111111111|00|1111111111 ~(3 << 10)
		//00000010101001|00|1000100101

		//00000010101001|00|1000100101 |
		//00000000000000|01|0000000000
		//00000010101001|01|1000100101

	*pGPIOA_MODE_OUT |= (1 << 10); // check if GPIOx_MODER on PA5 is enable, if not, enable it

	while(1) {

		*pGPIOA_DATA_OUT |= (1 << 5); // EN LD2

	}

}
